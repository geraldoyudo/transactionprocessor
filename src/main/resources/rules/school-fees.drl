package com.isslng.banking.processor.drools;

import com.isslng.banking.processor.entities.TransactionInput;
import com.isslng.banking.processor.utils.TransactionEvaluatorUtils;
import com.isslng.banking.processor.utils.TypeSafeHelper;
import java.util.Map;
import java.util.ArrayList;

rule "Notify user for customer accounts starting with 70"
	when
		$ti : TransactionInput( code == "TR-CASH-RECEIPT" && 
		((String) transactionFields.get("contraAccount")) str[startsWith] "70")
	then
		TransactionEvaluatorUtils.setUserNotificationChannels($ti, "COMPLETED", "simple-email");
		TransactionEvaluatorUtils.setUserNotificationChannels($ti, "APPROVED", "simple-sms");
		TransactionEvaluatorUtils.setNotificationLevels($ti, "ALL", "USER");
		$ti.setNeedsApproval(true);
	end


rule "Require approval for transactions greater than 500000"
	when
		$ti : TransactionInput( code == "TR-CASH-RECEIPT" &&
		((int) transactionFields.get("amount")) > 500000)
	then
		$ti.setNeedsApproval(true);
	end

rule "Require approval for customer accounts starting with 50"
	when
		$ti : TransactionInput( code == "TR-CASH-RECEIPT" && 
		((String)transactionFields.get("contraAccount")) str[startsWith] "50")
	then
		$ti.setNeedsApproval(true);
	end

rule "Notify user and tenant for customer accounts starting with 80"
	when
		$ti : TransactionInput( code == "TR-CASH-RECEIPT" &&
		((String) transactionFields.get("contraAccount")) str[startsWith] "80")
	then
		ArrayList $levels = new ArrayList();
		$levels.add("USER");
		$levels.add("TENANT");
		$ti.meta("COMPLETED",$levels);
	end


